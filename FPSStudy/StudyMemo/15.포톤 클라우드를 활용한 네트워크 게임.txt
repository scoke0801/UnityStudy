[ 포톤 네트워크 엔진 ]
- 유니티 엔진에 친화적인 네트워크 게임 엔진 중 하나.
- 20명의 동시접속자 까지는 무료로 사용 가능.

[ 포톤 리얼타임 vs 포톤 클라우드 ]
- 포톤 리얼타임: 다양한 개발플랫폼에 맞춰진 포톤의 핵심 코어 엔진.
- 포톤 클라우드: SaaS(Software As a Service)의 개념으로 소프트웨어를 임대해 사용하는 방식.
- 포톤 서버: 물리적인 서버를 직접 운영하는 것.

				포톤 서버				포톤 클라우드
서버 운영 및 관리		필요					불필요
확장성(로드밸런싱)	직접 관리				관리 없음
서버 사이드 게임 로직	커스터마이징 가능			불가능
라이선스			서버당 과금 체계			동시 접속 사용자별 과금 체계


[ URP, Universal Render Pipeline ]
- 범용으로 사용 가능한 렌더링 파이프라인으로 구품질의 렌더링을 제공하며, PC, 콘솔, 모바일, VR, AR등 거의 모든 플랫폼에 적용할 수 있다.
- 또한 포스트 프로세싱 기능과 통합되어 다양한 후처리 그래픽 효과를 처리할 수 있다.

[ 포스트 프로세싱 ]
- 렌더링된 결과물에 대한 후처리 작업.( 카메라가 촬영한 영상 또는 이미지를 스크린에 출력하기 전에 다양한 필터와 효과를 적용하는 기술.
- URP설정된 프로젝트에서 AutoExposure, Fog, Screen Space Reflection 등 효과는 적용할 수 없다.
- 카메라 Rendering - PostProcessing 옵션을 활성화해야 게임 뷰에서도 적용.

[ 비네팅 ]
- 화면의 주변이나 모서리를 어둡게 처리하는 것.
- 화면의 가운데 부분으로시선을 모으는 효과
- Intensity : 화면의 외각 부분에 표현할 어두움의 강도 또는 세기를 조절하는 속성.

[ Bloom ]
- 광원 주위로 과장되게 표현하는 광학효과.
- 몽환적인 느낌을 주는?
 
[ Tonemapping ]
- 조명의 밝기를 HDR(High Dynamic Range)에서 사람이 인식할 수 있는 범위(LDR, LowDynamic Range)로 조정하는 효과.
- 광원의 밝기를 일반적인 값보다 크게 하는 것을 권장.
- 블룸 효과와 같이 사용할 경우 더욱 더 좋은 이미지 품질을 생산 가능.

[ Cinemachine ]
- Body - follow offset : 카메라가 Follow 속성에 연결된 Player를 추적할 때 얼마만큼 떨어진 거리에서 추적할 것인지.
- Aim - Tracked Object Offset : 카메라의 LookAt 속성으로 카메라의 각도를 설정.
- Dead Zone Width / Height : follow 대상이 이동할 때, 카메라의 이동 및 회전에 대한 임계치를 설정.
	Look At 포인트가 DeadZone에 가까워지면 바로 이동 및 회전이 일어난다.
	
[ 포톤 서버 접속 ]
- 룸 단위 네트워킹 기능을 제공.
- 룸이란 네트워크 게임을 실행할 수 있는 논리적인 공간으로 룸에 입장해야, 룸에 입장한 다른 유저와 통신이 가능.
- 로비로 접속 -> 룸의 정보 수신 - > 룸 접속

PhotonNetwork.AutomaticallySyncScene : 방장(마스터 권한이 있는 유저)이 새로운 씬을 로딩했을 때 해당 룸에 입장한 다른 접속 유저들에게도 자동으로 해당 씬을 로딩해주는 기능.
게임 버전 : 같은 버전의 유저끼리 접속을 허용하는 기능.
SendRate : 서버와의 초당 통신 횟수.

[ OnconnectedToMaster ]
포톤 서버에 접속하면 호출되는 콜백함수.

[ PhotonNetwork.JoinLobby ]
- 로비에 입장하기 위한 함수.
- 룸 목록에 대한 정보 수신이 필요없다면, 해당 함수를 호출할 필요 없이 바로 룸을 생성.

[ OnJoinedLobby ]
- 로비에 접속하면 호출되는 콜백 함수.

[ 랜덤 매치 메이킹 ]
- JoinRandomRoom.
- 접속할 룸이 없으면, OnJoinRandomFailed

[ PhotonView 컴포넌트 ]
- 네트워크 상에 접속한 플레이어 간의 데이터를 송수신하는 통신 모듈.
- 여러 개를 사용할 수는 있지만, 네트워크 대역폭과 성능상 이유로 1개만 사용을 권장.
- Synchronization : 동기화 방식을 지정하는 속성. 
	None: 동기화 처리를 하지 않음. RPC호출만을 위한 PhotonView에 적합.
	Unreliable On Change : 마지막 데이터가 변경되지 않았을 때 데이터를 송신하지 않는다.
	Unreliable : 송신한 패킷의 수신 여부를 확인하지 안흔다.
	Unreliable On Change : Unreliable 과 동일하고, 변경사항이 발생했을 때만 송신한다.
- Observed Components : Photon View 컴포넌트가 관찰해 데이터를 송수신할 대상을 등록하는 속성.
- 동기화 두가지 방식.
	Photon Transform View, Photon Animator View 컴포넌트를 사용하는 방식.
	OnPhotonSerialize View 콜백함수를 사용하는 방식.